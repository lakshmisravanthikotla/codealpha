<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>E-Commerce Store</title>
</head>
<body>
    <header>
        <h1>E-Commerce Store</h1>
        <div class="cart">
            <button id="cart-button">ðŸ›’ Cart (<span id="cart-count">0</span>)</button>
        </div>
    </header>
    <main>
        <div class="product-list" id="product-list">
            <!-- Products will be dynamically inserted here -->
        </div>
    </main>
    <div class="modal" id="cart-modal">
        <div class="modal-content">
            <span class="close" id="close-modal">&times;</span>
            <h2>Your Shopping Cart</h2>
            <ul id="cart-items"></ul>
            <div class="total">
                Total: $<span id="total-price">0.00</span>
            </div>
            <button id="checkout-button">Checkout</button>
        </div>
    </div>
    <script src="app.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: #f4f4f4;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: #007bff;
    color: white;
    padding: 10px 20px;
}

.product-list {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

.product {
    background: white;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
    width: 200px;
    text-align: center;
}

.product button {
    background: #007bff;
    color: white;
    border: none;
    padding: 10px;
    cursor: pointer;
}

.product button:hover {
    background: #0056b3;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 300px;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.total {
    margin-top: 20px;
    font-weight: bold;
}
const products = [
    { id: 1, name: "Product 1", price: 10.00 },
    { id: 2, name: "Product 2", price: 15.00 },
    { id: 3, name: "Product 3", price: 20.00 },
    { id: 4, name: "Product 4", price: 25.00 },
];

let cart = [];

function renderProducts() {
    const productList = document.getElementById('product-list');
    products.forEach(product => {
        const productDiv = document.createElement('div');
        productDiv.className = 'product';
        productDiv.innerHTML = `
            <h3>${product.name}</h3>
            <p>$${product.price.toFixed(2)}</p>
            <button onclick="addToCart(${product.id})">Add to Cart</button>
        `;
        productList.appendChild(productDiv);
    });
}

function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    const existingProduct = cart.find(p => p.id === productId);
    
    if (existingProduct) {
        existingProduct.quantity++;
    } else {
        cart.push({ ...product, quantity: 1 });
    }
    
    updateCartCount();
}

function updateCartCount() {
    const cartCount = document.getElementById('cart-count');
    cartCount.textContent = cart.length;
}

document.getElementById('cart-button').onclick = function() {
    displayCart();
};

function displayCart() {
    const cartModal = document.getElementById('cart-modal');
    const cartItems = document.getElementById('cart-items');
    const totalPrice = document.getElementById('total-price');
    
    cartItems.innerHTML = '';
    let total = 0;

    cart.forEach(item => {
        const li = document.createElement('li');
        li.textContent = ${item.name} - $${item.price.toFixed(2)} (x${item.quantity});
        cartItems.appendChild(li);
        total += item.price * item.quantity;
    });

    totalPrice.textContent = total.toFixed(2);
    cartModal.style.display = 'block';
}

document.getElementById('close-modal').onclick = function() {
    document.getElementById('cart-modal').style.display = 'none';
};

document.getElementById('checkout-button').onclick = function() {
    alert('Checkout functionality not implemented yet.');
};

window.onclick = function(event) {
    const cartModal = document.getElementById('cart-modal');
    if (event.target === cartModal) {
        cartModal.style.display = 'none';
    }
};

// Initial render of products
renderProducts();
